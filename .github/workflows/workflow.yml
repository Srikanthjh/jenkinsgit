name: Create Tag on Merge to test

on:
  pull_request:
    types: [closed]
    branches:
      - test

jobs:
  create-tag:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request' && github.event.pull_request.merged && github.event.pull_request.base.ref == 'test'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
       
    - name: Read version from file
      run: |
        export VERSION=$(cat .github/workflows/VERSION)
        echo "VERSION=$VERSION" >> $GITHUB_ENV

    - name: Increment version
      run: |
        VERSION=$VERSION
        MAJOR=$(echo "${VERSION}" | cut -d '.' -f 1 | sed 's/[^0-9]*//g')
        MINOR=$(echo "${VERSION}" | cut -d '.' -f 2 | sed 's/[^0-9]*//g')
        PATCH=$(echo "${VERSION}" | cut -d '.' -f 3 | sed 's/[^0-9]*//g')
        BUG=$(echo "${VERSION}" | cut -d '.' -f 4 | sed 's/[^0-9]*//g')

        NEW_PATCH=$((PATCH+1))

        echo "$MAJOR.$MINOR.$NEW_PATCH.$BUG" > .github/workflows/VERSION

        echo "new_version=$MAJOR.$MINOR.$NEW_PATCH.$BUG" >> $GITHUB_ENV

    - name: Commit changes
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add .github/workflows/VERSION
        git commit -m "Update version file"

    - name: Create tag
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ env.new_version }}
        # release_name: Release ${{ env.new_version }}
        body: |
          This is a new release.
